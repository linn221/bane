scalar WordType
type Word {
  id: Int!
  word: String!
  wordType: WordType! # Fuzz | Attack
  description: String
  # tags: [Tag]
  # notes: [Note]
}

type WordList {
    id: Int!
    name: String!
    description: String
}

input NewWordList {
    id: Int!
    name: String!
    description: String
}

# type ProductUnit {

#   id: Int!
#   name: String!
#   abbreviation: String!
#   decimalPlaces: Int!
#   isActive: Boolean!
#   priority: Int!
# }

# input NewProductUnit {
#   name: String!
#   abbreviation: String!
#   decimalPlaces: Int!
#   isActive: Boolean!
#   priority: Int!
# }

# type AllProductUnit {
#   id: Int!
#   name: String!
#   abbreviation: String!
#   decimalPlaces: Int!
# }
# type ProductUnit{
#   id: Int!
# }

# extend type Mutation {

# }

# extend type Query {
# }
