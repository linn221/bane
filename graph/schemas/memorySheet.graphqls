scalar MyDate

type MemorySheet {
    id: Int!
    value: String!
    alias: String
    createDate: MyDate!
    currentDate: MyDate
    nextDate: MyDate
    notes: [Note!]!
    # attachments: [Attachment!]!
    # images: [Image!]!
}

input NewMemorySheet {
    value: String!
    alias: String
    date: MyDate
}

type TodayMemorySheet {
    today: MyDate!
    sheets: [MemorySheet!]!
    nextDay: [MemorySheet!]! @goField(forceResolver: true)
    nextMonth: [MemorySheet!]! @goField(forceResolver: true)   
    thisWeek: [MemorySheet!]! @goField(forceResolver: true)
    thisMonth: [MemorySheet!]! @goField(forceResolver: true)
}

input PatchMemorySheet {
    value: String
    date: MyDate
}

extend type Mutation {
    createMemorySheet(input: NewMemorySheet!): MemorySheet!
    updateMemorySheet(id: Int, alias: String, input: NewMemorySheet!): MemorySheet!
    patchMemorySheet(id: Int, alias: String, input: PatchMemorySheet!): MemorySheet!
    deleteMemorySheet(id: Int, alias: String): MemorySheet!
}

extend type Query {
    memorySheet(id: Int, alias: String): MemorySheet!
    mSheets(date: MyDate): [MemorySheet!]!
}