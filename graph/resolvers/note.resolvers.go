package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.81

import (
	"context"

	"github.com/linn221/bane/graph"
	"github.com/linn221/bane/graph/model"
	"github.com/linn221/bane/models"
	"github.com/linn221/bane/services"
)

// NewNote is the resolver for the newNote field.
func (r *mutationResolver) NewNote(ctx context.Context, input *models.NewNote) (*models.Note, error) {
	return services.NoteService.CreateNote(r.app, r.DB.WithContext(ctx), input)
}

// DelNote is the resolver for the delNote field.
func (r *mutationResolver) DelNote(ctx context.Context, id int) (*models.Note, error) {
	return services.NoteService.Delete(r.DB.WithContext(ctx), &id)
}

// Match is the resolver for the match field.
func (r *noteResolver) Match(ctx context.Context, obj *models.Note, regex string) (*model.SearchResult, error) {
	return services.MatchRegex(obj, regex)
}

// Notes is the resolver for the notes field.
func (r *queryResolver) Notes(ctx context.Context, filter *models.NoteFilter) ([]*models.Note, error) {
	return services.NoteService.ListNotes(r.app, r.DB.WithContext(ctx), filter)
}

// Note returns graph.NoteResolver implementation.
func (r *Resolver) Note() graph.NoteResolver { return &noteResolver{r} }

type noteResolver struct{ *Resolver }
